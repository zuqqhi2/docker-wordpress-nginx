# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	listen   80; ## listen for ipv4; this line is default and implied
	listen   [::]:80 default ipv6only=on; ## listen for ipv6

	# Make site accessible from http://localhost/
	server_name localhost;
	
  # Redirect to HTTPS
  return 301 https://$host$request_uri;
}

server {
	listen   443 ssl http2; ## listen for ipv4; this line is default and implied
	listen   [::]:443 ssl http2 ipv6only=on; ## listen for ipv6

	root /usr/share/nginx/www;
	index index.php index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;
	
	# Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
	sendfile off;

  # Security
  ssl_dhparam /etc/ssl/private/dhparam.pem;
  ssl_certificate /etc/letsencrypt/live/localhost/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/localhost/privkey.pem;
  ssl_session_timeout 5m;
  ssl_session_cache shared:SSL:1m;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

  add_header Strict-Transport-Security "max-age=15768000; includeSubdomains";

  server_tokens off;

  # Compression
  gzip                    on;
  gzip_http_version       1.0;
  gzip_types              text/plain;
  gzip_types              text/xml;
  gzip_types              text/css;
  gzip_types              application/xml;
  gzip_types              application/xhtml+xml;
  gzip_types              application/rss+xml;
  gzip_types              application/atom_xml;
  gzip_types              application/javascript;
  gzip_types              application/x-javascript;
  gzip_types              image/png;
  gzip_types              image/jpeg;
  gzip_types              image/gif;
  gzip_disable            "MSIE [1-7]\.";
  gzip_disable            "Mozilla/4";
  gzip_comp_level         1;
  gzip_buffers            4 8k;
  gzip_vary               on;
  gzip_min_length         1000;
  gzip_proxied            expired no-cache no-store private auth;

  # Performance
  keepalive_timeout 60;


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		try_files $uri $uri/ /index.php?q=$uri&$args;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

	location /doc/ {
		alias /usr/share/doc/;
		autoindex on;
		allow 127.0.0.1;
		allow ::1;
		deny all;
	}

	# Only for nginx-naxsi : process denied requests
	#location /RequestDenied {
		# For example, return an error code
		#return 418;
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/www;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
                try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

		# With php7.2-cgi alone:
		# fastcgi_pass 127.0.0.1:9000;
		# With php5-fpm:
		fastcgi_pass unix:/run/php/php7.2-fpm.sock;
		fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include fastcgi_params;
	}

  location ~ \.(jpg|png|gif|swf|jpeg)$ {
    log_not_found off;
    access_log off;
    expires 3d;
  }

  location ~ \.ico$ {
    log_not_found off;
    access_log off;
    expires max;
  }

  location ~ \.(css|js)$ {
    charset  UTF-8;
    access_log off;
    expires 1d;
  }

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}
